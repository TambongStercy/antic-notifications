services:
  # Frontend React Application
  admin-dashboard:
    build:
      context: ./admin-dashboard
      dockerfile: Dockerfile
    container_name: antic-admin-dashboard
    ports:
      - "8080:80"
    environment:
      NODE_ENV: production
    depends_on:
      notification-service:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - notification-network

  # Backend Node.js Application
  notification-service:
    build: .
    container_name: antic-notification-service
    ports:
      - "8000:3000"
      - "8002:3002"
    environment:
      NODE_ENV: production
      PORT: 3000
      WEBSOCKET_PORT: 3002
      MONGODB_URI: ${MONGODB_URI:-mongodb://host.docker.internal:27017/notification-service}
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      ADMIN_USERNAME: ${ADMIN_USERNAME:-admin}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      WHATSAPP_SESSION_PATH: /app/sessions/whatsapp
      LOG_LEVEL: info
      LOG_FILE: /app/logs/app.log
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:8080}
    volumes:
      - whatsapp-sessions:/app/sessions/whatsapp
      - app-logs:/app/logs
    # No database dependency - using host MongoDB
    restart: unless-stopped
    networks:
      - notification-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s


volumes:
  whatsapp-sessions:
    driver: local
  app-logs:
    driver: local

networks:
  notification-network:
    driver: bridge
