services:
  admin-dashboard:
    image: antic-notifications-admin:latest
    container_name: antic-admin-dashboard
    ports:
      - "3001:80"
    restart: unless-stopped
    depends_on:
      - notification-service
    networks:
      - antic-network

  notification-service:
    image: antic-notifications-backend:latest
    container_name: antic-notification-service
    ports:
      - "8000:3000"  # API port
      - "3002:3002"  # WebSocket port
    env_file:
      - .env
    volumes:
      - ./sessions:/app/sessions
      - ./logs:/app/logs
    restart: unless-stopped
    depends_on:
      - mongodb
    networks:
      - antic-network

  mongodb:
    image: mongo:7
    container_name: antic-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
      - MONGO_INITDB_DATABASE=antic_notifications
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    restart: unless-stopped
    networks:
      - antic-network

  mongo-express:
    image: mongo-express:latest
    container_name: antic-mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGODB_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGODB_PASSWORD}
      - ME_CONFIG_MONGODB_URL=mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@mongodb:27017/
      - ME_CONFIG_BASICAUTH=false
    depends_on:
      - mongodb
    restart: unless-stopped
    networks:
      - antic-network

volumes:
  mongodb_data:

networks:
  antic-network:
    driver: bridge